# Copyright 2025 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

appName=request-corporation-tax-number-stubs

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.



# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router=prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
    com.kenshoo.play.metrics.MetricsController = {
      needsLogging = false
      needsAuditing = false
    }

    controllers.MicroserviceHelloWorld = {
      needsLogging = false
      needsAuditing = false
    }

}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled


# Microservice specific config

auditing {
    enabled=true
}

microservice {

    services {

        auth {
            host=localhost
            port=8500
        }

        request-corporation-tax-number {
            host = localhost
            port = 9201
        }

        datastream {
            host=localhost
            port=8100
        }
    }
}


